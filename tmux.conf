#bind new tmux prefix, ` to make it easier to reach and less likely to conflict.
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

#make it so vim escape doesn't have to wait for tmux (makes it laggy)
set-option -sg  escape-time 0

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys S-C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi S-C-\ select-pane -l
# end vim-tmux-navigator recommended bindings

#smart pane resizing using vim-tmux-resizer
#is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
# NOT CURRENTLY WORKING FOR VIM PANES, need to figure out
bind -n M-h if-shell "$is_vim" "send-keys M-h" "resize-pane -L 4"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "resize-pane -R 4"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "resize-pane -U 4"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "resize-pane -D 4"
#end vim-tmux-resizer recommended settings

bind | split-window -h
bind - split-window -v

#vim bindings for navigating tmux buffer in copy mode
set-window-option -g mode-keys vi
unbind-key -T copy-mode-vi v
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'C-v' rectangle-toggle

# reload config
unbind r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
